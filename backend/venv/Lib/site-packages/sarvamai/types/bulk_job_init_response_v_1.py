# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from .base_job_parameters import BaseJobParameters
from .job_state import JobState
from .storage_container_type import StorageContainerType


class BulkJobInitResponseV1(UniversalBaseModel):
    job_id: str = pydantic.Field()
    """
    Job UUID.
    """

    storage_container_type: StorageContainerType = pydantic.Field()
    """
    Storage Container Type
    """

    job_parameters: BaseJobParameters
    job_state: JobState

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
