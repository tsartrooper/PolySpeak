# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel


class EventResponseData(UniversalBaseModel):
    event_type: typing.Literal["final"] = pydantic.Field(default="final")
    """
    Type of event that occurred
    """

    message: typing.Optional[str] = pydantic.Field(default=None)
    """
    Human-readable description of the event
    """

    timestamp: typing.Optional[dt.datetime] = pydantic.Field(default=None)
    """
    ISO 8601 timestamp when the event occurred
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
