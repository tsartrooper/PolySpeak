# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from .task_file_details import TaskFileDetails
from .task_state import TaskState


class TaskDetailV1(UniversalBaseModel):
    inputs: typing.Optional[typing.List[TaskFileDetails]] = None
    outputs: typing.Optional[typing.List[TaskFileDetails]] = None
    state: typing.Optional[TaskState] = None
    error_message: typing.Optional[str] = None
    exception_name: typing.Optional[str] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
