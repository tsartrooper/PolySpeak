# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel


class AudioOutputData(UniversalBaseModel):
    content_type: str = pydantic.Field()
    """
    MIME type of the audio content (e.g., 'audio/mp3', 'audio/wav')
    """

    audio: str = pydantic.Field()
    """
    Base64-encoded audio data ready for playback or download
    """

    request_id: typing.Optional[str] = pydantic.Field(default=None)
    """
    Unique identifier for the request
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
